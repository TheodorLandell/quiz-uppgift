// =================================
// QUIZ-LOGIK (Aff√§rslogik)
// =================================

import { getAllQuestions } from "./questions.js";

// State - h√•ller koll p√• nuvarande quiz-tillst√•nd
let state = {
  questions: [],
  currentIndex: 0,
  score: 0,
  totalQuestions: 0,
};

// Initiera quiz - h√§mta fr√•gor och √•terst√§ll state
export function init() {
  state.questions = getAllQuestions();
  state.currentIndex = 0;
  state.score = 0;
  state.totalQuestions = state.questions.length;

  return getCurrentQuestion();
}

// H√§mta nuvarande fr√•ga
export function getCurrentQuestion() {
  return {
    question: state.questions[state.currentIndex],
    currentIndex: state.currentIndex,
    totalQuestions: state.totalQuestions,
    score: state.score,
  };
}

// Validera om svaret √§r r√§tt eller fel
export function validateAnswer(userAnswerIndex) {
  const currentQuestion = state.questions[state.currentIndex];
  return userAnswerIndex === currentQuestion.correctAnswer;
}

// √ñka po√§ngen om svaret √§r r√§tt
export function updateScore() {
  state.score++;
  return state.score;
}

// G√• till n√§sta fr√•ga
export function nextQuestion() {
  state.currentIndex++;

  if (state.currentIndex < state.totalQuestions) {
    return getCurrentQuestion();
  }

  return null; // Inga fler fr√•gor
}

// Ber√§kna och returnera slutresultat
export function getFinalScore() {
  const percentage = Math.round((state.score / state.totalQuestions) * 100);

  return {
    score: state.score,
    total: state.totalQuestions,
    percentage: percentage,
  };
}

// Feedbackmeddelande baserat p√• resultat
export function getFeedbackMessage(percentage) {
  if (percentage >= 90) {
    return "Utm√§rkt prestation! Du √§r en riktig Liverpool-expert! üåü‚öΩ";
  } else if (percentage >= 70) {
    return "Bra jobbat! Du vet mycket om The Reds! üëçüî¥";
  } else if (percentage >= 50) {
    return "Godk√§nt! Men du kan l√§ra dig mer om Liverpool! üòä";
  } else {
    return "Forts√§tt √∂va! L√§s p√• om Liverpools historia! üí™üìö";
  }
}

// Randomisera fr√•geordning
export function shuffleQuestions() {
  for (let i = state.questions.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [state.questions[i], state.questions[j]] = [
      state.questions[j],
      state.questions[i],
    ];
  }
}